{
  "address": "0xB3De1e212B49e68f4a68b5993f31f63946FCA2a6",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "UpdatedGlobalConfig",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "key",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "UpdatedTokenConfig",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "globalConfig",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "l1TokenConfig",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "updateGlobalConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "l1Token",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "updateTokenConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3a0d1bc4b17bf73c1381136a9acbd19ce3fdcb1f3bb3cf7bffed7bf6af100351",
  "receipt": {
    "to": null,
    "from": "0x9A8f92a830A5cB89a3816e3D267CB7791c16b04D",
    "contractAddress": "0xB3De1e212B49e68f4a68b5993f31f63946FCA2a6",
    "transactionIndex": 52,
    "gasUsed": "904948",
    "logsBloom": "0x
    "blockHash": "0xcb54492d6e31a239f68997fd547052c30f9a913efa8b78e496f966d6a6c80719",
    "transactionHash": "0x3a0d1bc4b17bf73c1381136a9acbd19ce3fdcb1f3bb3cf7bffed7bf6af100351",
    "logs": [
      {
        "transactionIndex": 52,
        "blockNumber": 4968255,
        "transactionHash": "0x3a0d1bc4b17bf73c1381136a9acbd19ce3fdcb1f3bb3cf7bffed7bf6af100351",
        "address": "0xB3De1e212B49e68f4a68b5993f31f63946FCA2a6",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009a8f92a830a5cb89a3816e3d267cb7791c16b04d"
        ],
        "data": "0x",
        "logIndex": 103,
        "blockHash": "0xcb54492d6e31a239f68997fd547052c30f9a913efa8b78e496f966d6a6c80719"
      }
    ],
    "blockNumber": 4968255,
    "cumulativeGasUsed": "6094856",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6cb85092f216cf1fe7eddb9b3372a54e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"UpdatedGlobalConfig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"key\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"UpdatedTokenConfig\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"globalConfig\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"l1TokenConfig\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"updateGlobalConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"updateTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract should not perform any validation on the setting values and should be owned by the governance system of the full contract suite..\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateGlobalConfig(bytes32,string)\":{\"params\":{\"key\":\"Key to update.\",\"value\":\"Value to update.\"}},\"updateTokenConfig(address,string)\":{\"params\":{\"l1Token\":\"the l1 token address to update value for.\",\"value\":\"Value to update.\"}}},\"title\":\"Allows admin to set and update configuration settings for full contract system. These settings are designed to be consumed by off-chain bots, rather than by other contracts.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateGlobalConfig(bytes32,string)\":{\"notice\":\"Updates global config.\"},\"updateTokenConfig(address,string)\":{\"notice\":\"Updates token config.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AcrossConfigStore.sol\":\"AcrossConfigStore\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@uma/core/contracts/common/implementation/MultiCaller.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity ^0.8.0;\\n\\n// This contract is taken from Uniswap's multi call implementation (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/base/Multicall.sol)\\n// and was modified to be solidity 0.8 compatible. Additionally, the method was restricted to only work with msg.value\\n// set to 0 to avoid any nasty attack vectors on function calls that use value sent with deposits.\\n\\n/// @title MultiCaller\\n/// @notice Enables calling multiple methods in a single call to the contract\\ncontract MultiCaller {\\n    function multicall(bytes[] calldata data) external returns (bytes[] memory results) {\\n        results = new bytes[](data.length);\\n        for (uint256 i = 0; i < data.length; i++) {\\n            (bool success, bytes memory result) = address(this).delegatecall(data[i]);\\n\\n            if (!success) {\\n                // Next 5 lines from https://ethereum.stackexchange.com/a/83577\\n                if (result.length < 68) revert();\\n                assembly {\\n                    result := add(result, 0x04)\\n                }\\n                revert(abi.decode(result, (string)));\\n            }\\n\\n            results[i] = result;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9f6afe5bafc5e16fe8d63010a740ec3a88a9f00a7236ea7e5b039a2f50eb346e\",\"license\":\"AGPL-3.0-only\"},\"contracts/AcrossConfigStore.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport \\\"@uma/core/contracts/common/implementation/MultiCaller.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title Allows admin to set and update configuration settings for full contract system. These settings are designed\\n * to be consumed by off-chain bots, rather than by other contracts.\\n * @dev This contract should not perform any validation on the setting values and should be owned by the governance\\n * system of the full contract suite..\\n */\\ncontract AcrossConfigStore is Ownable, MultiCaller {\\n    // General dictionary where admin can associate variables with specific L1 tokens, like the Rate Model and Token\\n    // Transfer Thresholds.\\n    mapping(address => string) public l1TokenConfig;\\n\\n    // General dictionary where admin can store global variables like `MAX_POOL_REBALANCE_LEAF_SIZE` and\\n    // `MAX_RELAYER_REPAYMENT_LEAF_SIZE` that off-chain agents can query.\\n    mapping(bytes32 => string) public globalConfig;\\n\\n    event UpdatedTokenConfig(address indexed key, string value);\\n    event UpdatedGlobalConfig(bytes32 indexed key, string value);\\n\\n    /**\\n     * @notice Updates token config.\\n     * @param l1Token the l1 token address to update value for.\\n     * @param value Value to update.\\n     */\\n    function updateTokenConfig(address l1Token, string memory value) external onlyOwner {\\n        l1TokenConfig[l1Token] = value;\\n        emit UpdatedTokenConfig(l1Token, value);\\n    }\\n\\n    /**\\n     * @notice Updates global config.\\n     * @param key Key to update.\\n     * @param value Value to update.\\n     */\\n    function updateGlobalConfig(bytes32 key, string calldata value) external onlyOwner {\\n        globalConfig[key] = value;\\n        emit UpdatedGlobalConfig(key, value);\\n    }\\n}\\n\",\"keccak256\":\"0x1bfe6579401315c001005bbae6945ea39f17c635d7f1772d36bc80ee2c3b36f6\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x6080806040523461005a575f8054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3610efd908161005f8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c806350fbbd0114610094578063715018a61461008f5780638098b8751461008a5780638da5cb5b146100855780639fdd403a14610080578063ac9650d81461007b578063e5e818ae146100765763f2fde38b14610071575f80fd5b610845565b610649565b6105c5565b6104e8565b610498565b6103fc565b610328565b346101075760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101075773ffffffffffffffffffffffffffffffffffffffff6100e061010b565b165f5260016020526101036100f760405f206101f2565b60405191829182610317565b0390f35b5f80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361010757565b90600182811c92168015610175575b602083101461014857565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f169161013d565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176101ed57604052565b61017f565b60405190815f82546102038161012e565b908184526020946001916001811690815f146102725750600114610234575b505050610231925003826101ac565b90565b5f90815285812095935091905b81831061025a57505061023193508201015f8080610222565b85548784018501529485019486945091830191610241565b9150506102319593507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201015f8080610222565b5f5b8381106102c45750505f910152565b81810151838201526020016102b5565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093610310815180928187528780880191016102b3565b0116010190565b9060206102319281815201906102d4565b34610107575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101075761035e610e49565b5f73ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b67ffffffffffffffff81116101ed57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b346101075760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101075761043361010b565b6024359067ffffffffffffffff8211610107573660238301121561010757816004013590610460826103c2565b9161046e60405193846101ac565b8083523660248286010111610107576020815f92602461049697018387013784010152610977565b005b34610107575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010757602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346101075760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610107576004355f52600260205261010361053060405f206101f2565b6040519182916020835260208301906102d4565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b8483106105795750505050505090565b90919293949584806105b5837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc086600196030187528a516102d4565b9801930193019194939290610569565b346101075760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101075767ffffffffffffffff6004358181116101075736602382011215610107578060040135918211610107573660248360051b830101116101075761010391602461063d9201610d3d565b60405191829182610544565b346101075760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101075767ffffffffffffffff6004356024803583811161010757366023820112156101075780600401359384116101075736828583010111610107576106b9610e49565b825f526020600260205260405f20906106dc866106d6845461012e565b84610b2f565b5f90601f8711600114610773575094610761916107518280877f84c11a81ce8e8060e814e03c4606fe325e7a24ecc22ef7001254e27de3762f49999a5f92610766575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b90555b6040519384930183610e04565b0390a2005b880101359050875f61071f565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe087166107a4845f5260205f2090565b925f905b82821061082b575050916107619391887f84c11a81ce8e8060e814e03c4606fe325e7a24ecc22ef7001254e27de3762f49989994106107f1575b5050600182811b019055610754565b867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88660031b161c1991870101351690555f806107e2565b80600185968a8395978b01013581550195019301906107a8565b346101075760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101075761087c61010b565b610884610e49565b73ffffffffffffffffffffffffffffffffffffffff8091169081156108f3575f54827fffffffffffffffffffffffff00000000000000000000000000000000000000008216175f55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff90610995610e49565b1690815f526001602090600160205260405f209183519167ffffffffffffffff83116101ed576109cf836109c9865461012e565b86610b2f565b602091601f8411600114610a6157505091610a43827f2170feb790d9bf809ba50947096322ec651593149b6f78e673e51c1c67cfe3fd9593610a51955f91610a56575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b905560405191829182610317565b0390a2565b90508401515f610a12565b91907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0841690610a94865f5260205f2090565b935f915b838310610b185750505092610a519492600192827f2170feb790d9bf809ba50947096322ec651593149b6f78e673e51c1c67cfe3fd989610610ae1575b5050811b0190556100f7565b8501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690555f80610ad5565b888501518655948501949381019391810191610a98565b601f8211610b3c57505050565b5f5260205f20906020601f840160051c83019310610b74575b601f0160051c01905b818110610b69575050565b5f8155600101610b5e565b9091508190610b55565b67ffffffffffffffff81116101ed5760051b60200190565b90610ba082610b7e565b610bad60405191826101ac565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610bdb8294610b7e565b01905f5b828110610beb57505050565b806060602080938501015201610bdf565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9190811015610c895760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561010757019081359167ffffffffffffffff8311610107576020018236038113610107579190565b610bfc565b908092918237015f815290565b3d15610cc5573d90610cac826103c2565b91610cba60405193846101ac565b82523d5f602084013e565b606090565b6020818303126101075780519067ffffffffffffffff8211610107570181601f82011215610107578051610cfd816103c2565b92610d0b60405194856101ac565b818452602082840101116101075761023191602080850191016102b3565b8051821015610c895760209160051b010190565b919091610d4983610b96565b925f5b818110610d5857505050565b5f80610d65838587610c29565b60409391610d77855180938193610c8e565b0390305af490610d85610c9b565b9115610dac575090600191610d9a8288610d29565b52610da58187610d29565b5001610d4c565b90604481511061010757610e00610dd160049283810151602480918301019101610cca565b92519283927f08c379a00000000000000000000000000000000000000000000000000000000084528301610317565b0390fd5b90601f836040947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09360208652816020870152868601375f8582860101520116010190565b73ffffffffffffffffffffffffffffffffffffffff5f54163303610e6957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212201caef7f302dbea36e3c2d224476bb4b7dd18bcb8263fb638668f8b9ce8fdd4f264736f6c63430008170033",
  "deployedBytecode": "0x60806040526004361015610011575f80fd5b5f3560e01c806350fbbd0114610094578063715018a61461008f5780638098b8751461008a5780638da5cb5b146100855780639fdd403a14610080578063ac9650d81461007b578063e5e818ae146100765763f2fde38b14610071575f80fd5b610845565b610649565b6105c5565b6104e8565b610498565b6103fc565b610328565b346101075760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101075773ffffffffffffffffffffffffffffffffffffffff6100e061010b565b165f5260016020526101036100f760405f206101f2565b60405191829182610317565b0390f35b5f80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361010757565b90600182811c92168015610175575b602083101461014857565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f169161013d565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176101ed57604052565b61017f565b60405190815f82546102038161012e565b908184526020946001916001811690815f146102725750600114610234575b505050610231925003826101ac565b90565b5f90815285812095935091905b81831061025a57505061023193508201015f8080610222565b85548784018501529485019486945091830191610241565b9150506102319593507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201015f8080610222565b5f5b8381106102c45750505f910152565b81810151838201526020016102b5565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093610310815180928187528780880191016102b3565b0116010190565b9060206102319281815201906102d4565b34610107575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101075761035e610e49565b5f73ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b67ffffffffffffffff81116101ed57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b346101075760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101075761043361010b565b6024359067ffffffffffffffff8211610107573660238301121561010757816004013590610460826103c2565b9161046e60405193846101ac565b8083523660248286010111610107576020815f92602461049697018387013784010152610977565b005b34610107575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010757602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346101075760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610107576004355f52600260205261010361053060405f206101f2565b6040519182916020835260208301906102d4565b6020808201906020835283518092526040830192602060408460051b8301019501935f915b8483106105795750505050505090565b90919293949584806105b5837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc086600196030187528a516102d4565b9801930193019194939290610569565b346101075760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101075767ffffffffffffffff6004358181116101075736602382011215610107578060040135918211610107573660248360051b830101116101075761010391602461063d9201610d3d565b60405191829182610544565b346101075760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101075767ffffffffffffffff6004356024803583811161010757366023820112156101075780600401359384116101075736828583010111610107576106b9610e49565b825f526020600260205260405f20906106dc866106d6845461012e565b84610b2f565b5f90601f8711600114610773575094610761916107518280877f84c11a81ce8e8060e814e03c4606fe325e7a24ecc22ef7001254e27de3762f49999a5f92610766575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b90555b6040519384930183610e04565b0390a2005b880101359050875f61071f565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe087166107a4845f5260205f2090565b925f905b82821061082b575050916107619391887f84c11a81ce8e8060e814e03c4606fe325e7a24ecc22ef7001254e27de3762f49989994106107f1575b5050600182811b019055610754565b867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88660031b161c1991870101351690555f806107e2565b80600185968a8395978b01013581550195019301906107a8565b346101075760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101075761087c61010b565b610884610e49565b73ffffffffffffffffffffffffffffffffffffffff8091169081156108f3575f54827fffffffffffffffffffffffff00000000000000000000000000000000000000008216175f55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff90610995610e49565b1690815f526001602090600160205260405f209183519167ffffffffffffffff83116101ed576109cf836109c9865461012e565b86610b2f565b602091601f8411600114610a6157505091610a43827f2170feb790d9bf809ba50947096322ec651593149b6f78e673e51c1c67cfe3fd9593610a51955f91610a56575b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161790565b905560405191829182610317565b0390a2565b90508401515f610a12565b91907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0841690610a94865f5260205f2090565b935f915b838310610b185750505092610a519492600192827f2170feb790d9bf809ba50947096322ec651593149b6f78e673e51c1c67cfe3fd989610610ae1575b5050811b0190556100f7565b8501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690555f80610ad5565b888501518655948501949381019391810191610a98565b601f8211610b3c57505050565b5f5260205f20906020601f840160051c83019310610b74575b601f0160051c01905b818110610b69575050565b5f8155600101610b5e565b9091508190610b55565b67ffffffffffffffff81116101ed5760051b60200190565b90610ba082610b7e565b610bad60405191826101ac565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610bdb8294610b7e565b01905f5b828110610beb57505050565b806060602080938501015201610bdf565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9190811015610c895760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561010757019081359167ffffffffffffffff8311610107576020018236038113610107579190565b610bfc565b908092918237015f815290565b3d15610cc5573d90610cac826103c2565b91610cba60405193846101ac565b82523d5f602084013e565b606090565b6020818303126101075780519067ffffffffffffffff8211610107570181601f82011215610107578051610cfd816103c2565b92610d0b60405194856101ac565b818452602082840101116101075761023191602080850191016102b3565b8051821015610c895760209160051b010190565b919091610d4983610b96565b925f5b818110610d5857505050565b5f80610d65838587610c29565b60409391610d77855180938193610c8e565b0390305af490610d85610c9b565b9115610dac575090600191610d9a8288610d29565b52610da58187610d29565b5001610d4c565b90604481511061010757610e00610dd160049283810151602480918301019101610cca565b92519283927f08c379a00000000000000000000000000000000000000000000000000000000084528301610317565b0390fd5b90601f836040947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09360208652816020870152868601375f8582860101520116010190565b73ffffffffffffffffffffffffffffffffffffffff5f54163303610e6957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212201caef7f302dbea36e3c2d224476bb4b7dd18bcb8263fb638668f8b9ce8fdd4f264736f6c63430008170033",
  "devdoc": {
    "details": "This contract should not perform any validation on the setting values and should be owned by the governance system of the full contract suite..",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateGlobalConfig(bytes32,string)": {
        "params": {
          "key": "Key to update.",
          "value": "Value to update."
        }
      },
      "updateTokenConfig(address,string)": {
        "params": {
          "l1Token": "the l1 token address to update value for.",
          "value": "Value to update."
        }
      }
    },
    "title": "Allows admin to set and update configuration settings for full contract system. These settings are designed to be consumed by off-chain bots, rather than by other contracts.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "updateGlobalConfig(bytes32,string)": {
        "notice": "Updates global config."
      },
      "updateTokenConfig(address,string)": {
        "notice": "Updates token config."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4381,
        "contract": "contracts/AcrossConfigStore.sol:AcrossConfigStore",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 15134,
        "contract": "contracts/AcrossConfigStore.sol:AcrossConfigStore",
        "label": "l1TokenConfig",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 15138,
        "contract": "contracts/AcrossConfigStore.sol:AcrossConfigStore",
        "label": "globalConfig",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_bytes32,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}
